extend type Query {
    planner: PlannerQuery
}

type PlannerQuery {
    plans: [Plan]!
    planItem(id: ID!): PlanItem!
}

interface CorePlanItem implements Node {
    id: ID!
    name: String!
    childCount: NonNegativeInt
    children: [PlanItem!]!
    descendantCount: NonNegativeInt
    descendants: [PlanItem!]!
}

type Plan implements Node & Owned & AccessControlled  {
    id: ID!
    owner: User!
    name: String!
    grants: [AccessControlEntry!]!
    childCount: NonNegativeInt
    children: [PlanItem!]!
    descendantCount: NonNegativeInt
    descendants: [PlanItem!]!
    bucketCount: NonNegativeInt
    buckets: [PlanBucket!]!
}

"""Represents a single item on a plan"""
type PlanItem implements Node {
    id: ID!
    name: String!
    quantity: Quantity
    preparation: String
    notes: String
    plan: Plan!
    parent: PlanItem
    childCount: NonNegativeInt
    children: [PlanItem!]!
    descendantCount: NonNegativeInt
    descendants: [PlanItem!]!
    aggregate: PlanItem
    componentCount: NonNegativeInt
    components: [PlanItem!]!
    bucket: PlanBucket
    status: PlanItemStatus!
}

type PlanBucket {
    id: ID!
    plan: Plan!
    name: String
    date: Date
}

enum PlanItemStatus {
    NEEDED
    ACQUIRED
    COMPLETED
    DELETED
}

extend type Mutation {
    planner: PlannerMutation
}

type PlannerMutation {
    """Assign a plan item to a bucket (in the same plan)."""
    assignBucket(id: ID!, bucketId: ID!): PlanItem!
    """Create a new bucket w/in a plan, with an optional name and date."""
    createBucket(planId: ID!, name: String, date: Date): PlanBucket!
    """Create a new item under the specified parent (which may be a plan, for
    top-level items), after the specified peer item (null means 'at end'), and with
    the specified name.
    """
    createItem(parentId: ID!, afterId: ID, name: String!): PlanItem!
    """Create a new empty plan."""
    createPlan(name: String!): Plan!
    """Create a new plan by duplicating the specified source plan."""
    duplicatePlan(name: String!, sourcePlanId: ID!): Plan!
    """Delete a bucket from a plan."""
    deleteBucket(planId: ID!, bucketId: ID!): Plan!
    """Deletes the grant for a user w/in a plan, if one exists."""
    deleteGrant(planId: ID!, userId: ID!): Plan!
    """Deletes the given plan, and all its related data."""
    deletePlan(id: ID!): Boolean
    """Update the name of the given plan item."""
    rename(id: ID!, name: String!): PlanItem!
    """Set the access level granted to a user w/in a plan."""
    setGrant(planId: ID!, userId: ID!, accessLevel:AccessLevel): Plan!
    """Update a bucket w/in a plan, by setting or clearing its name and date."""
    updateBucket(planId: ID!, bucketId: ID!, name: String, date: Date): PlanBucket!
}
