server:
  port: ${port:5000}
  error:
    whitelabel:
      enabled: false

spring:
  main:
    allow-circular-references: true
    banner-mode: off
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT:5432}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}
  sql:
    init:
      platform: postgres
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate
    generate-ddl: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
    open-in-view: true # the default; just suppress the warning
  mvc:
    throw-exception-if-no-handler-found: true
  security:
    oauth2:
      client:
        registration:
          google:
            # the Foodinger Dev credential, locked to localhost
            clientId: 460345342407-j9tabdu6epe7m3nth1v5403ffs91vmm6.apps.googleusercontent.com
            clientSecret: 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
            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
app:
  # where 'index.html' lives from the UA's perspective
  public-url: http://localhost:3001/
  aws:
    region: us-west-2
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
  auth:
    tokenSecret: ${TOKEN_SECRET}
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - ${app.public-url}post-oauth2/redirect

graphql:
  servlet:
    websocket:
      enabled: false
